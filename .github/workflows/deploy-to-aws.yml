name: Deploy to Amazon ECS

on:
 
  push:
    branches: [ develop, main ]

jobs:
  
  build:
    
    name: Build Image & Deploy to ECS
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: addams_family
        IMAGE_TAG: addams_family_image
      run: |
        export DB_USR=${{ secrets.DB_USR }}
        export DB_PWD=${{ secrets.DB_PWD }}
        export DB_URL=${{ secrets.DB_URL }}
        export DB_PORT=${{ secrets.DB_PORT }}
        export DB_NAME=${{ secrets.DB_NAME }}
        aws codeartifact login --tool pip --repository addams_family --domain addams-family --domain-owner 942717128015
        docker build \
          --build-arg DB_USR \
          --build-arg DB_PWD \
          --build-arg DB_URL \
          --build-arg DB_PORT \
          --build-arg DB_NAME \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: aws-task-definition.json
        container-name: adf
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: adfs
        cluster: adf
        wait-for-service-stability: false
